on:
  release:
    types: [published]
  
  workflow_run:
    workflows: ["Scheduled Release"]
    types: [completed]


jobs:
  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

      - name: Trigger echo
        run: echo "A new release has been published."
        
      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: ${{ steps.release-label.outputs.level != null }}

  generate:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: 'Create new milestone'
        id: createmilestone
        uses: "WyriHaximus/github-action-create-milestone@v1"
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  
  DeployProd:
    name: Trigger Jenkins Job on Prod
    runs-on: ubuntu-latest
    steps:
      - name: Set tag, client, and AWS env vars
        run: | 
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "CLIENT=standard" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=eu-west-1" >> $GITHUB_ENV
          echo "AWS_SG_ID=sg-0e5c105a5f7ad1e6e" >> $GITHUB_ENV
          
      - name: Jenkins Job Run
        uses: toptal/jenkins-job-trigger-action@master
        with:
              "Tag": "${{ env.TAG }}"
            
        
