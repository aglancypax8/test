name: Scheduled Release

on:
  push

env:
    Change_Freeze: false

jobs:
  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:

      - name: Change Freeze Implemented 
        if: env.Change_Freeze != 'false'
        run: echo "Scheduled Releases can only be published during approved maintenance windows."

      # - id: release
      #   uses: rymndhng/release-on-push-action@master
      #   if: env.Change_Freeze == 'false'
      #   with:
      #     # increments the patch version by 1. e.g. 1.0.0 > 1.0.1
      #     bump_version_scheme: patch
      #     use_github_release_notes: true
      #     #tag_prefix: ""
      #     #release_name: "v<RELEASE_VERSION>"
      #     dry-run: true
      
      # - id: outputs
      #   name: Check Output Parameters
      #   run: |
      #     echo "Got tag name ${{ steps.release.outputs.tag_name }}"
      #     echo "Got release version ${{ steps.release.outputs.version }}"

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v2.3.7" #${{ steps.release.outputs.tag_name }}
          release_name: "2.3.7" #${{ steps.release.outputs.version }}
          draft: true
          prerelease: false

      - id: publish
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
